{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "TorchRun调试: 训练 GPT 模型",
            "type": "python",
            "request": "launch",
            "program": "/usr/local/bin/torchrun",
            "args": [
                "${workspaceFolder}/pretrain_gpt.py",
                "--tensor-model-parallel-size", "2",
                "--pipeline-model-parallel-size", "1",
                "--sequence-parallel",
                "--num-layers", "24",
                "--hidden-size", "1024",
                "--num-attention-heads", "16",
                "--seq-length", "1024",
                "--max-position-embeddings", "1024",
                "--micro-batch-size", "4",
                "--global-batch-size", "16",
                "--lr", "0.00015",
                "--train-iters", "500000",
                "--lr-decay-iters", "320000",
                "--lr-decay-style", "cosine",
                "--min-lr", "1.0e-5",
                "--weight-decay", "1e-2",
                "--lr-warmup-fraction", ".01",
                "--clip-grad", "1.0",
                "--fp16",
                "--attention-softmax-in-fp32",
                "--data-path", "./_datasets/openwebtext_small_text_document",
                "--vocab-file", "./_datasets/gpt_vocab.json",
                "--merge-file", "./_datasets/gpt_merges.txt",
                "--split", "949,50,1",
                "--log-interval", "100",
                "--save-interval", "10000",
                "--eval-interval", "1000",
                "--eval-iters", "10",
                "--distributed-backend", "nccl",
                "--save", "./_checkpoint",
                "--load", "./_checkpoint"
            ],
            "console": "integratedTerminal",  // 在集成终端中查看输出
            "env": {
                "CUDA_DEVICE_MAX_CONNECTIONS": "1",
                "MASTER_ADDR": "localhost",
                "MASTER_PORT": "39266",
                "GPUS_PER_NODE": "2",
                "NNODES": "1",
                "NODE_RANK": "0",
                "WORLD_SIZE": "2"
            },
            "cwd": "${workspaceFolder}",
            "preLaunchTask": "",  // 可以在此处配置启动前的任务，例如：检查依赖项或编译
            "postDebugTask": ""  // 调试后执行的任务，例如清理
        }
    ]
}
